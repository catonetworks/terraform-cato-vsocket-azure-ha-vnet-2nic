# This template generates the run-command for the secondary vSocket.
# The configuration is similar to the primary, but the NIC roles are swapped.

# Enable debug output
set -x
echo "Configuring HA settings for secondary vSocket..."
echo "Resource Group: ${resource_group_name}"
echo "Secondary vSocket Name: ${vsocket_secondary_name}"
echo "Location: ${location}"
echo "Primary NIC Name: ${primary_nic_name}"
echo "Secondary NIC Name: ${secondary_nic_name}"
echo "Secondary NIC IP: ${secondary_nic_ip}"

# Create the configuration JSON for debugging
config_json='{"location": "${location}", "subscription_id": "${subscription_id}", "vnet": "${vnet_name}", "group": "${resource_group_name}", "vnet_group": "${resource_group_name}", "subnet": "${subnet_name}", "nic": "${secondary_nic_name}", "ha_nic": "${primary_nic_name}", "lan_nic_ip": "${secondary_nic_ip}", "lan_nic_mac": "${secondary_nic_mac}", "subnet_cidr": "${subnet_range_lan}", "az_mgmt_url": "management.azure.com"}'
echo "Configuration JSON to be written:"
echo "$config_json"

# Execute the Azure CLI command with output capture
echo "Executing Azure CLI run-command..."
output=$(az vm run-command invoke \
  --resource-group "${resource_group_name}" \
  --name "${vsocket_secondary_name}" \
  --command-id RunShellScript \
  --scripts "echo '$config_json' > /cato/socket/configuration/vm_config.json && echo 'Configuration file written successfully' && ls -la /cato/socket/configuration/vm_config.json && echo 'File contents:' && cat /cato/socket/configuration/vm_config.json" \
  2>&1)

# Check the exit status
exit_code=$?
echo "Azure CLI exit code: $exit_code"
echo "Azure CLI output:"
echo "$output"

if [ $exit_code -eq 0 ]; then
    echo "SUCCESS: Secondary vSocket HA configuration completed successfully"
    exit 0
else
    echo "ERROR: Secondary vSocket HA configuration failed"
    exit $exit_code
fi
